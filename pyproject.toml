[tool.poetry]
name = "parareq"
version = "0.1.1"
description = "Reliable Parallel OpenAI API Request Processing with Rate Limiting"
authors = ["Matt Gibson"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/urbanophile/parareq"
repository = "https://github.com/urbanophile/parareq"
keywords = ["openai", "api", "async", "parallel", "rate-limiting"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Framework :: aiohttp",
  "Programming Language :: Python",
  "Intended Audience :: Science/Research",
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.9.0"
tiktoken = "^0.5.1"
openai = "^1.1.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.1.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-aiohttp = "^1.0.5"
pytest-mock = "^3.12.0"

flask = "^3.0.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx-autoapi = "^3.0.0"
sphinx-rtd-theme = "^1.3.0"
python-semantic-release = "^8.3.0"
myst-parser = "^2.0.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = "pyproject.toml:version"


[tool.poetry.scripts]
parareq = "parareq.cli:cli"

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests", "integration"]
